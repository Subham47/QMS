'''i = 0
    while(True):
        print("Enter patient id and q to quit at any time")
        id = input()
        if id == 'q':
            break
       # array = ([[0.],
       #     [0.],
        #    [1.]])
        array = np.array(array)
        array = array.reshape(1,3,1)
        array.shape
        y_pred = model.predict(array)
        y_pred = np.argmax(y_pred, axis = 1)
        print(y_pred)
        patient_data = array.reshape(3,1)
        if y_pred == [5]:
            print("Critical data detected for patient id:",id)
            print("Appending critical data at the top of queue")
            new_row = pd.DataFrame({'hypertension':[patient_data[0][0]],
                          'heart_disease':[patient_data[1][0]],
                          'smoking_status':[patient_data[2][0]],
                          'Severity_Severe':[y_pred]}, index=[i])
            i+=1
            #Concat with old DataFrame and reset the Index.
            #df = pd.concat([new_row, df]).reset_index(drop = True)
            df = df.append(new_row, ignore_index=False)
            df = df.sort_index().reset_index(drop=True)
        if y_pred == [4]:
            print("Appending data to queue for patient id:",id)
            new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                          'Dry-Cough':[patient_data[1][0]],
                          'Difficulty-in-Breathing':[patient_data[2][0]],
                          'stroke':[y_pred]})
            df = df.append(new_row, ignore_index=True)
    
    print("Reshuffling the whole queue for stroke")
    x = np.asarray(x).astype(np.float32)
    x = np.array(x)
    x = x.reshape(x.shape[0], x.shape[1], 1)
    for i in range(x.shape[0]):
        predictions_stroke = model.predict(x[i])
        predictions_stroke = np.argmax(predictions_stroke, axis = 1)
        fz = fuzz.trimf(predictions_stroke, [4,4.5,5]) #fuzzy covid prediction
        #for element in fx:
        patient_data = x[0].reshape(3,1)
        if fz >= 4.5:
            print("Critical data detected for stroke")
            print("Appending patient and critical data at the top of queue")
            new_row = pd.DataFrame({'hypertension':[patient_data[0][0]],
                          'heart_disease':[patient_data[1][0]],
                          'smoking_status':[patient_data[2][0]],
                          'stroke':[y_pred]}, index=[i])
            i+=1
            #Concat with old DataFrame and reset the Index.
            #df = pd.concat([new_row, df]).reset_index(drop = True)
            df = df.append(new_row, ignore_index=False)
            df = df.sort_index().reset_index(drop=True)
func(array)
i = 0
while(True):
  print("Enter patient id and q to quit at any time")
  id = input()
  if id == 'q':
    break
  array = ([[0.],
        [0.],
        [1.]])
  array = np.array(array)
  array = array.reshape(1,3,1)
  array.shape
  y_pred = model.predict(array)
  y_pred = np.argmax(y_pred, axis = 1)
  #print(y_pred)
  patient_data = array.reshape(3,1)
  if y_pred == 1:
    print("Critical data detected for patient id:",id)
    print("Appending critical data at the top of queue")
    new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]}, index=[i])
    i+=1
    #Concat with old DataFrame and reset the Index.
    #df = pd.concat([new_row, df]).reset_index(drop = True)
    df = df.append(new_row, ignore_index=False)
    df = df.sort_index().reset_index(drop=True)
  if y_pred == 0:
    print("Appending data to queue for patient id:",id)
    new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]})
    df = df.append(new_row, ignore_index=True)

df.tail(5)'''

'''x_test[0]
feed data to predict
write data to times.csv on basis of 0/1
if 0---keep appending
if 1---add to the top'''
'''    i = 0
    while(True):
        print("Enter patient id and q to quit at any time")
        id = input()
        if id == 'q':
            break
        #array = ([[0.],
        #        [0.],
        #        [1.]])
        array = np.array(array)
        array = array.reshape(1,1,3)
        #array.shape
        y_pred = model.predict(array)
        y_pred = np.argmax(y_pred, axis = 1)
        print(y_pred)
        patient_data = array.reshape(3,1)
        if y_pred == [3]:
            print("Critical data detected for patient id:",id)
            print("Appending critical data at the top of queue...")
            new_row = pd.DataFrame({'family_history':[patient_data[0][0]],
                          'treatment':[patient_data[1][0]],
                          'tech_company':[patient_data[2][0]],
                          'mental_health_consequence':[y_pred]}, index=[i])
            i+=1
            #Concat with old DataFrame and reset the Index.
            #df = pd.concat([new_row, df]).reset_index(drop = True)
            df = df.append(new_row, ignore_index=False)
            df = df.sort_index().reset_index(drop=True)
        if y_pred == [2]:
            print("Appending data to queue for patient id:",id)
            new_row = pd.DataFrame({'family_history':[patient_data[0][0]],
                      'treatment':[patient_data[1][0]],
                      'tech_company':[patient_data[2][0]],
                      'Smental_health_consequence':[y_pred]})
            df = df.append(new_row, ignore_index=True)
    
print("Reshuffling the whole queue for mental illness")
    x = np.asarray(x).astype(np.float32)
    x = np.array(x)
    x = x.reshape(x.shape[0], x.shape[1], 1)
    for i in range(x.shape[0]):
        predictions_mental_illness = model.predict(x[i])
        predictions_mental_illness = np.argmax(predictions_mental_illness, axis = 1)
        fy = fuzz.trimf(predictions_mental_illness, [2,2.5,3]) #fuzzy covid prediction
        #for element in fx:
        patient_data = x[0].reshape(3,1)
        if fy >= 2.5:
            print("Critical data detected for mental illness")
            print("Appending patient and critical data at the top of queue")
            new_row = pd.DataFrame({'family_history':[patient_data[0][0]],
                          'treatment':[patient_data[1][0]],
                          'tech_company':[patient_data[2][0]],
                          'mental_health_consequence':[y_pred]}, index=[i])
            i+=1
            #Concat with old DataFrame and reset the Index.
            #df = pd.concat([new_row, df]).reset_index(drop = True)
            df = df.append(new_row, ignore_index=False)
            df = df.sort_index().reset_index(drop=True)
            
            
   fy = fuzz.trimf(y_pred, [2,2.5,3])
    for element in fy:
        if element >= 0.5:
            print("Critical data detected for covid-19")
            print("Appending critical data at the top of queue")
            new_row = pd.DataFrame({'family_history':[patient_data[0][0]],
                          'treatment':[patient_data[1][0]],
                          'tech_company':[patient_data[2][0]],
                          'mental_health_consequence':[y_pred]}, index=[i])
            i+=1
            #Concat with old DataFrame and reset the Index.
            #df = pd.concat([new_row, df]).reset_index(drop = True)
            df = df.append(new_row, ignore_index=False)
            df = df.sort_index().reset_index(drop=True)
        
        if element <= 0.5:
            print("Appending data to queue for covid-19")
            new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                          'Dry-Cough':[patient_data[1][0]],
                          'Difficulty-in-Breathing':[patient_data[2][0]],
                          'Severity_Severe':[y_pred]})
            df = df.append(new_row, ignore_index=True)
func(array)
i = 0
while(True):
  print("Enter patient id and q to quit at any time")
  id = input()
  if id == 'q':
    break
  array = ([[0.],
        [0.],
        [1.]])
  array = np.array(array)
  array = array.reshape(1,3,1)
  array.shape
  y_pred = model.predict(array)
  y_pred = np.argmax(y_pred, axis = 1)
  #print(y_pred)
  patient_data = array.reshape(3,1)
  if y_pred == 1:
    print("Critical data detected for patient id:",id)
    print("Appending critical data at the top of queue")
    new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]}, index=[i])
    i+=1
    #Concat with old DataFrame and reset the Index.
    #df = pd.concat([new_row, df]).reset_index(drop = True)
    df = df.append(new_row, ignore_index=False)
    df = df.sort_index().reset_index(drop=True)
  if y_pred == 0:
    print("Appending data to queue for patient id:",id)
    new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]})
    df = df.append(new_row, ignore_index=True)

df.tail(5)'''

'''x_test[0]
feed data to predict
write data to times.csv on basis of 0/1
if 0---keep appending
if 1---add to the top'''
'''print("Reshuffling the whole queue for covid")
    x = np.asarray(x).astype(np.float32)
    #x = np.array(x)
    x = x.reshape(x.shape[0], x.shape[1], 1)
    for i in range(x.shape[0]):
        predictions_covid = model.predict(x[i])
        predictions_covid = np.argmax(predictions_covid, axis = 1)
        fx = fuzz.trimf(predictions_covid, [0,0.5,1]) #fuzzy covid prediction
        #for element in fx:
        patient_data = x[i].reshape(3,1)
        if fx >= 0.5:
            print("Critical data detected for covid-19")
            print("Appending patient and critical data at the top of queue")
            new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                          'Dry-Cough':[patient_data[1][0]],
                          'Difficulty-in-Breathing':[patient_data[2][0]],
                          'Severity_Severe':[y_pred]}, index=[i])
            i+=1
            #Concat with old DataFrame and reset the Index.
            #df = pd.concat([new_row, df]).reset_index(drop = True)
            df = df.append(new_row, ignore_index=False)
            df = df.sort_index().reset_index(drop=True)
        
        if fx <= 0.5:
            print("Appending data to queue for covid-19")
            new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                          'Dry-Cough':[patient_data[1][0]],
                          'Difficulty-in-Breathing':[patient_data[2][0]],
                          'Severity_Severe':[y_pred]})
            df = df.append(new_row, ignore_index=True)
            
    
i = 0
    while(True):
        print("Enter patient id and q to quit at any time")
        id = input()
        if id == 'q':
            break
        #array = ([[0.],
           #       [0.],
            #      [1.]])
        array = np.array(array)
        array = array.reshape(1,3,1)
        #array.shape
        y_pred = model.predict(array)
        y_pred = np.argmax(y_pred, axis = 1)
        print(y_pred)
        patient_data = array.reshape(3,1)
        if y_pred == [1]:
            print("Critical data detected for patient id:",id)
            print("Appending critical data at the top of queue")
            new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]}, index=[i])
            i+=1
            #Concat with old DataFrame and reset the Index.
            #df = pd.concat([new_row, df]).reset_index(drop = True)
            df = df.append(new_row, ignore_index=False)
            df = df.sort_index().reset_index(drop=True)
        if y_pred == [0]:
            print("Appending data to queue for patient id:",id)
            new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]})
            df = df.append(new_row, ignore_index=True)
    
    
    #return y_pred
#x_test[0]

"""**Event classification and decision transfer to Decision support system(DSS) &
Reshuffling of queue based on decision generated from DSS**
"""

#print("Enter q to quit entering patient data and any other key to continue")
#ch = input()
#for new-entries
func(array)
i = 0
while(True):
  print("Enter patient id and q to quit at any time")
  id = input()
  if id == 'q':
    break
  array = ([[0.],
        [0.],
        [1.]])
  array = np.array(array)
  array = array.reshape(1,3,1)
  array.shape
  y_pred = model.predict(array)
  y_pred = np.argmax(y_pred, axis = 1)
  #print(y_pred)
  patient_data = array.reshape(3,1)
  if y_pred == 1:
    print("Critical data detected for patient id:",id)
    print("Appending critical data at the top of queue")
    new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]}, index=[i])
    i+=1
    #Concat with old DataFrame and reset the Index.
    #df = pd.concat([new_row, df]).reset_index(drop = True)
    df = df.append(new_row, ignore_index=False)
    df = df.sort_index().reset_index(drop=True)
  if y_pred == 0:
    print("Appending data to queue for patient id:",id)
    new_row = pd.DataFrame({'Fever':[patient_data[0][0]],
                  'Dry-Cough':[patient_data[1][0]],
                  'Difficulty-in-Breathing':[patient_data[2][0]],
                  'Severity_Severe':[y_pred]})
    df = df.append(new_row, ignore_index=True)

df.tail(5)'''

'''x_test[0]
feed data to predict
write data to times.csv on basis of 0/1
if 0---keep appending
if 1---add to the top'''

#print(x[0].shape)
#x[0] = x[0].reshape(3,1)
#print(x[0])
#print(x[0].shape)
    #for i in predictions_covid:
    #    if i == 2:
    #        i = 1
#patient_data = x[0].reshape(3,1)
#print(fx[316799])
    #fx[498]=0.6